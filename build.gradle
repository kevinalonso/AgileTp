//Java project  (for build)
apply plugin:'java'

//For eclipse
apply plugin:'eclipse'
apply plugin: 'pmd'
apply plugin: 'findbugs'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'
//apply plugin: 'de.aaschmid.cpd'
apply plugin: 'jdepend'

// Les endroits pour aller chercher les librairies
repositories{
	mavenCentral()
	jcenter()
}

//La librairie que je veux utiliser
dependencies{
	compile 'joda-time:joda-time:2.10'
	testCompile 'junit:junit:4.12'
}

//PMD
pmd{
    pmdTest.enabled = false
    ruleSets = ["java-basic",
    "java-clone",
    "java-codesize",
    "java-comments",
    "java-controversial",
    "java-coupling",
    "java-design",
    "java-empty",
    "java-finalizers",
    "java-imports",
    "java-naming",
    "java-optimizations",
    "java-strings",
    "java-unusedcode"]
    toolVersion = '5.8.1'
    ignoreFailures = true
}
tasks.withType(Pmd){
    reports {
        xml.enabled true
        html.enabled true
    }
}

//CHECKSTYLE
checkstyle {
    toolVersion '7.8.1'
    checkstyleTest.enabled = false
    configFile file("config/checkstyle/checkstyle.xml")
    ignoreFailures = true
}

checkstyleMain {
    source ='src/main/jva'
}

//JACOCO
jacoco {
    toolVersion = "0.8.1"
    reportsDir = file("$buildDir/customJacocoReportDir")
}
jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

// CPD
task cpd {
    doLast {
        def cpdOutputDir = new File("${reportDir}/cpd")
        cpdOutputDir.mkdirs()

        ant.taskdef(name: 'cpd', classname: 'net.sourceforge.pmd.cpd.CPDTask', classpath: configurations.pmd.asPath)

        ant.cpd(minimumTokenCount: '5', format: 'xml', outputFile: new File(cpdOutputDir, 'cpd.xml')) {
            fileset(dir: 'src') {
                include(name: '**/*.java')
            }
        }
    }
}

//TEST
test{
    ignoreFailures = true
}